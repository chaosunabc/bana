<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.bana</groupId>
  <artifactId>common-util</artifactId>
  <version>0.0.7-SNAPSHOT</version>
  <name>common-util</name>
  <description>集成所有公共工具方法的实体类</description>
  
  <properties>
  	<cxf.version>2.7.13</cxf.version>
  </properties>
  
  <dependencies>
	<!-- apache 读取配置的工具  -->
    <dependency>
		<groupId>commons-configuration</groupId>
		<artifactId>commons-configuration</artifactId>
		<version>1.10</version>
	</dependency>
	<!-- apache 的集合工具，应为默认引用的版本过低，所以单独引用了一下  -->
    <dependency>
		<groupId>commons-collections</groupId>
		<artifactId>commons-collections</artifactId>
		<version>3.2.1</version>
	</dependency>
  	<!-- apache 的 email功能 -->
  	<dependency>
		<groupId>org.apache.commons</groupId>
		<artifactId>commons-email</artifactId>
		<version>1.3.3</version>
	</dependency>
	<!-- 图片处理引用的包 -->
  	<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
	<dependency>
	    <groupId>commons-io</groupId>
	    <artifactId>commons-io</artifactId>
	    <version>2.4</version>
	</dependency>
	<!-- apache 的文件上传功能 -->
	<dependency>
		<groupId>commons-net</groupId>
		<artifactId>commons-net</artifactId>
		<version>3.3</version>
	</dependency>
	<!-- apache 的velocity的模板技术 -->
	<dependency>
		<groupId>velocity</groupId>
		<artifactId>velocity</artifactId>
		<version>1.5</version>
	</dependency>
	<!-- 日志的API配置系统 -->
  	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>
		<version>1.7.7</version>
	</dependency>
	<!-- 简单的一个日志实现库 -->
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-simple</artifactId>
		<version>1.7.7</version>
		<scope>provided</scope>
	</dependency>
	
	<!-- cxf自动生成客户端工具类WsdlToJava 需要的工具类 -->
	<dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-tools-wsdlto-frontend-jaxws</artifactId>
		<version>${cxf.version}</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-tools-wsdlto-databinding-jaxb</artifactId>
		<version>${cxf.version}</version>
		<scope>provided</scope>
	</dependency>
	<!-- cxf自动生成客户端工具类WsdlToJava 需要的工具类 end-->
	<!-- 增加此包是因为要测试调用JaxWsProxyFactoryBean 直接访问客户端 begin -->
	<dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-rt-frontend-jaxws</artifactId>
		<version>${cxf.version}</version>
		<scope>provided</scope>
	</dependency>
	<!-- 增加此包是因为要测试调用JaxWsProxyFactoryBean 直接访问客户端 end -->
	
	<!-- axis1 生成wsdl客户端，使用WsdltoJava 的依赖jar包  begin-->
	<dependency>
		<groupId>axis</groupId>
		<artifactId>axis</artifactId>
		<version>1.4</version>
		<scope>provided</scope>
	</dependency>
	<!-- axis1 生成wsdl客户端，使用WsdltoJava 的依赖jar包  end-->
	<!-- jdbc数据库连接池依赖的链接池  begin-->
	<dependency>
		<groupId>commons-dbcp</groupId>
		<artifactId>commons-dbcp</artifactId>
		<version>1.4</version>
		<scope>provided</scope>
	</dependency>
	<!-- jdbc数据库连接池依赖的链接池 end  -->
	
	<!-- 解析dom元素 begin -->
	<dependency>
		<groupId>dom4j</groupId>
		<artifactId>dom4j</artifactId>
		<version>1.6.1</version>
	</dependency> 
	<!-- 在使用dom4j中的xpath读取节点时，需要使用的jar包 -->
	<dependency>
		<groupId>jaxen</groupId>
		<artifactId>jaxen</artifactId>
		<version>1.1.4</version>
	</dependency>
	
	<!-- 二维码的生成与解析 -->
	<dependency>
		<groupId>com.google.zxing</groupId>
		<artifactId>core</artifactId>
		<version>3.2.0</version>
	</dependency>
	
	<!-- 代理类需要的jar包 -->
	<dependency>
		<groupId>cglib</groupId>
		<artifactId>cglib</artifactId>
		<version>2.2.2</version>
	</dependency>
	<!-- 汉字转拼音 -->
	<dependency>
	    <groupId>com.belerweb</groupId>
	    <artifactId>pinyin4j</artifactId>
	    <version>2.5.0</version>
	</dependency>
	
	<!-- 解析dom元素 end -->
	
	<!-- mongodb 的jdbc驱动jar包 begin -->
	<dependency>
		<groupId>org.mongodb</groupId>
		<artifactId>mongo-java-driver</artifactId>
		<version>2.12.5</version>
		<scope>provided</scope>
	</dependency>
	<!-- mongodb 的jdbc驱动jar包 end -->
	
	<!-- spring AOP监控依赖的jar包 -->
	<dependency>
		<groupId>org.aspectj</groupId>
		<artifactId>aspectjweaver</artifactId>
		<version>1.7.2</version>
		<scope>provided</scope>
	</dependency>
	
	<!-- java读取Microsoft Format Files相关jar包 -->
	<dependency>
		<groupId>org.apache.poi</groupId>
		<artifactId>poi-ooxml</artifactId>
		<version>3.8</version>
		<scope>provided</scope>
	</dependency>
	<!-- =======================json 组件的依赖 begin ================= -->
	<dependency>
		<groupId>net.sf.json-lib</groupId>
		<artifactId>json-lib</artifactId>
		<classifier>jdk15</classifier>
		<version>2.4</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>net.sf.ezmorph</groupId>
		<artifactId>ezmorph</artifactId>
		<version>1.0.6</version>
		<scope>provided</scope>
	</dependency>
	<!-- jsonlib自身就有commons-beanutils的引用 <dependency>
		<groupId>commons-beanutils</groupId>
		<artifactId>commons-beanutils</artifactId>
		<version>1.8.3</version>
		<scope>provided</scope>
	</dependency> -->
	<!-- =======================json 组件的依赖 end ================= -->
	<!-- =======================quartz定时任务 组件的依赖 end ================= -->
	<dependency>
		<groupId>org.quartz-scheduler</groupId>
		<artifactId>quartz</artifactId>
		<version>2.2.2</version>
		<exclusions>
			<exclusion>
				<groupId>c3p0</groupId>
				<artifactId>c3p0</artifactId>
			</exclusion>
		</exclusions>
		<scope>provided</scope>
	</dependency>
	<!-- =======================quartz定时任务 组件的依赖 end ================= -->
	<!-- 测试依赖的数据源 -->
	 <dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>5.1.23</version>
		<scope>test</scope>
	</dependency>
	
  	<!-- begin 正在测试中的Jar包依赖  add by liuwenjie-->
  	
	<!-- end 正在测试中的Jar包依赖  add by liuwenjie-->
	
	<!-- 测试方法的测试依赖 -->
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>4.11</version>
		<scope>test</scope>
	</dependency>
  </dependencies>
  
  <build>
  	<plugins>
  		<!-- 工程编码插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- 生成javadoc插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<charset>UTF-8</charset>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- 打包java源码 -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<configuration>
					<attach>true</attach>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
  	</plugins>
  	<resources>
			<resource><!-- 不对指定的资源文件进行资源替换 -->
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>
  </build>
  <!-- Maven私服配置 -->

	<distributionManagement>
			<repository>
				<id>releases</id>
				<name>hosts-release</name>
				<url>http://121.42.209.241:8081/nexus/content/repositories/releases/</url>
			</repository>
			<snapshotRepository>
				<id>snapshots</id>
				<name>hosts-snapshot</name>
				<url>http://121.42.209.241:8081/nexus/content/repositories/snapshots/</url>
			</snapshotRepository>
		</distributionManagement>
	<!-- ~~~~~~~~~~Maven私服配置结束 -->
</project>